---
import Layout from '../layout/Layout.astro';
import ProgressSteps from '../components/ProgressSteps';
import { readWizard, writeWizard } from "../utils/wizard.server";
import { getSession } from "../utils/auth";
import { checkMembershipStatus } from "../utils/membership";

// Server-side handling
let w = {};

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const orderType = String(formData.get("orderType") || "");
    const isMember = String(formData.get("isMember") || "false") === "true";
    const addons: { [id: string]: number } = {};

    // Parse addon quantities
    for (const [key, value] of formData.entries()) {
      if (key.startsWith("addon_")) {
        const id = key.replace("addon_", "");
        addons[id] = parseInt(String(value), 10) || 0;
      }
    }

    return writeWizard(Astro.request, { orderType, isMember, addons }, "/addons");
  } catch (error) {
    console.error("Error processing order type:", error);
  }
}

w = await readWizard(Astro.request);

// Redirect if prerequisites not met
if (!w.address || !w.date || !w.phone) {
  return Astro.redirect("/start-basic");
}

// Check real membership status from database
let isMember = false;
const session = await getSession(Astro.cookies);
if (session?.user?.id) {
  isMember = await checkMembershipStatus(session.user.id);
}

// SEO
const title = "Choose Service | Bags of Laundry";
const description = "Select your laundry service type and any specialty items.";
---

<Layout title={title} description={description} noIndex={true}>
  <div class="min-h-screen bg-gray-50">
    <div class="max-w-4xl mx-auto px-4 py-8">

      <!-- Progress Steps -->
      <ProgressSteps client:load currentStep={2} />

      <!-- Header -->
      <div class="text-center mb-8">
        <h1 class="text-2xl md:text-3xl font-bold text-gray-900 mb-2">Choose Your Service</h1>
        <p class="text-gray-600 mb-6">Select your pricing option and add any specialty items.</p>

        <!-- Member Status Badge -->
        <div id="member-status-badge" class="inline-block mb-4">
          {isMember ? (
            <div class="bg-gradient-to-r from-brand-primary to-brand-accent text-white rounded-full px-6 py-2 font-bold">
              ✨ Member Pricing Active
            </div>
          ) : (
            <div class="bg-gray-100 text-gray-700 border border-gray-200 rounded-full px-6 py-2 font-semibold">
              Non-Member Pricing
            </div>
          )}
        </div>

        <!-- Pricing Info -->
        <div class="bg-blue-50 border border-blue-200 rounded-xl p-4 max-w-2xl mx-auto mb-4">
          {isMember ? (
            <p class="text-sm text-gray-700">
              <span class="font-bold text-brand-primary">$1.75/lb</span> per-pound pricing OR choose from convenient per-bag options below
            </p>
          ) : (
            <p class="text-sm text-gray-700">
              <span class="font-bold">$2.25/lb</span> per-pound pricing • <span class="text-brand-primary font-semibold">Become a member</span> to save $0.50/lb and unlock per-bag pricing
            </p>
          )}
        </div>

        <!-- Become Member CTA (Non-Members Only) -->
        {!isMember && (
          <a
            href="/pricing"
            class="inline-flex items-center gap-2 bg-gradient-to-r from-brand-primary to-brand-accent text-white px-6 py-3 rounded-xl font-semibold hover:shadow-lg transition-all duration-200"
          >
            <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
            </svg>
            Unlock Member Pricing & Per-Bag Options
          </a>
        )}
      </div>

      <form method="post" class="space-y-12" id="order-form">
        <input type="hidden" name="orderType" id="selected-order-type" value={w.orderType || ""} />
        <input type="hidden" name="isMember" value={isMember.toString()} />

        <!-- Per Pound -->
        <div>
          <h2 class="text-xl font-bold mb-4">Per Pound</h2>
          <label class="cursor-pointer group block">
            <input
              type="radio"
              name="orderType"
              value="per_pound"
              checked={w.orderType === "per_pound"}
              class="sr-only order-type-radio"
            />
            <div class={`relative bg-white rounded-xl border-2 p-6 transition-all duration-300 hover:shadow-lg hover:-translate-y-1 group-hover:border-blue-400 ${
              w.orderType === "per_pound" ? "border-blue-500 shadow-lg ring-4 ring-blue-100" : "border-gray-200 shadow-sm"
            }`}>
              <div class="flex gap-6">
                <img src="https://images.unsplash.com/photo-1527515637462-cff94eecc1ac?q=80&w=400&auto=format&fit=crop" alt="Per Pound" class="w-24 h-24 rounded-xl object-cover" />
                <div class="flex-1">
                  <div class="flex justify-between">
                    <h3 class="font-bold text-xl">Per Pound</h3>
                    <span class="font-bold" id="per-pound-price">
                      {isMember ? "$1.75/lb" : "$2.25/lb"} · $35 minimum
                    </span>
                  </div>
                  <p class="text-sm text-gray-600 mt-2">Professional wash, dry & fold. Pay only for actual weight.</p>
                  {isMember && (
                    <div class="mt-3 inline-block bg-green-100 text-green-700 px-3 py-1 rounded-full text-xs font-bold">
                      Save $0.50/lb vs non-member pricing
                    </div>
                  )}
                </div>
              </div>
            </div>
          </label>
        </div>

        <!-- Per Bag (Members Only) -->
        {isMember && (
          <div>
            <div class="flex items-center justify-between mb-4">
              <h2 class="text-xl font-bold">Per Bag</h2>
              <span class="inline-block bg-gradient-to-r from-brand-primary to-brand-accent text-white rounded-full px-3 py-1 text-xs font-bold">
                Members Only
              </span>
            </div>
            <div class="space-y-4">
              <label class="cursor-pointer group block">
                <input
                  type="radio"
                  name="orderType"
                  value="small_bag"
                  checked={w.orderType === "small_bag"}
                  class="sr-only order-type-radio"
                />
                <div class={`relative bg-green-50 rounded-xl border-2 p-6 transition-all duration-300 hover:shadow-lg hover:-translate-y-1 group-hover:border-green-400 ${
                  w.orderType === "small_bag" ? "border-green-500 shadow-lg ring-4 ring-green-100" : "border-green-200 shadow-sm"
                }`}>
                  <div class="flex gap-6">
                    <img src="https://images.unsplash.com/photo-1553062407-98eeb64c6a62?q=80&w=400&auto=format&fit=crop" alt="Small Bag" class="w-24 h-24 rounded-xl object-cover" />
                    <div class="flex-1">
                      <div class="flex justify-between">
                        <h3 class="font-bold text-xl">Small Bag</h3>
                        <span class="font-bold">$35</span>
                      </div>
                      <p class="text-sm text-gray-500">Fits 12–18 lb</p>
                      <p class="text-sm text-gray-600 mt-2">Great for individuals or small loads.</p>
                    </div>
                  </div>
                </div>
              </label>

              <label class="cursor-pointer group block">
                <input
                  type="radio"
                  name="orderType"
                  value="medium_bag"
                  checked={w.orderType === "medium_bag"}
                  class="sr-only order-type-radio"
                />
                <div class={`relative bg-green-50 rounded-xl border-2 p-6 transition-all duration-300 hover:shadow-lg hover:-translate-y-1 group-hover:border-green-400 ${
                  w.orderType === "medium_bag" ? "border-green-500 shadow-lg ring-4 ring-green-100" : "border-green-200 shadow-sm"
                }`}>
                  <div class="flex gap-6">
                    <img src="https://images.unsplash.com/photo-1553062407-98eeb64c6a62?q=80&w=400&auto=format&fit=crop" alt="Medium Bag" class="w-24 h-24 rounded-xl object-cover" />
                    <div class="flex-1">
                      <div class="flex justify-between">
                        <h3 class="font-bold text-xl">Medium Bag</h3>
                        <span class="font-bold">$55</span>
                      </div>
                      <p class="text-sm text-gray-500">Fits 20–30 lb</p>
                      <p class="text-sm text-gray-600 mt-2">Most popular · perfect for weekly family laundry.</p>
                    </div>
                  </div>
                </div>
              </label>

              <label class="cursor-pointer group block">
                <input
                  type="radio"
                  name="orderType"
                  value="large_bag"
                  checked={w.orderType === "large_bag"}
                  class="sr-only order-type-radio"
                />
                <div class={`relative bg-green-50 rounded-xl border-2 p-6 transition-all duration-300 hover:shadow-lg hover:-translate-y-1 group-hover:border-green-400 ${
                  w.orderType === "large_bag" ? "border-green-500 shadow-lg ring-4 ring-green-100" : "border-green-200 shadow-sm"
                }`}>
                  <div class="flex gap-6">
                    <img src="https://images.unsplash.com/photo-1553062407-98eeb64c6a62?q=80&w=400&auto=format&fit=crop" alt="Large Bag" class="w-24 h-24 rounded-xl object-cover" />
                    <div class="flex-1">
                      <div class="flex justify-between">
                        <h3 class="font-bold text-xl">Large Bag</h3>
                        <span class="font-bold">$85</span>
                      </div>
                      <p class="text-sm text-gray-500">Fits 35–45 lb</p>
                      <p class="text-sm text-gray-600 mt-2">Best value for bulk laundry or large households.</p>
                    </div>
                  </div>
                </div>
              </label>
            </div>
          </div>
        )}

        <!-- Per Bag Locked (Non-Members) -->
        {!isMember && (
          <div>
            <div class="flex items-center justify-between mb-4">
              <h2 class="text-xl font-bold text-gray-400">Per Bag</h2>
              <span class="inline-block bg-gray-100 text-gray-500 border border-gray-200 rounded-full px-3 py-1 text-xs font-bold">
                🔒 Members Only
              </span>
            </div>
            <div class="relative">
              <div class="space-y-4 opacity-50 pointer-events-none">
                <div class="bg-gray-50 rounded-xl border-2 border-gray-200 p-6">
                  <div class="flex gap-6">
                    <img src="https://images.unsplash.com/photo-1553062407-98eeb64c6a62?q=80&w=400&auto=format&fit=crop" alt="Small Bag" class="w-24 h-24 rounded-xl object-cover" />
                    <div class="flex-1">
                      <div class="flex justify-between">
                        <h3 class="font-bold text-xl">Small Bag</h3>
                        <span class="font-bold">$35</span>
                      </div>
                      <p class="text-sm text-gray-500">Fits 12–18 lb</p>
                    </div>
                  </div>
                </div>

                <div class="bg-gray-50 rounded-xl border-2 border-gray-200 p-6">
                  <div class="flex gap-6">
                    <img src="https://images.unsplash.com/photo-1553062407-98eeb64c6a62?q=80&w=400&auto=format&fit=crop" alt="Medium Bag" class="w-24 h-24 rounded-xl object-cover" />
                    <div class="flex-1">
                      <div class="flex justify-between">
                        <h3 class="font-bold text-xl">Medium Bag</h3>
                        <span class="font-bold">$55</span>
                      </div>
                      <p class="text-sm text-gray-500">Fits 20–30 lb</p>
                    </div>
                  </div>
                </div>

                <div class="bg-gray-50 rounded-xl border-2 border-gray-200 p-6">
                  <div class="flex gap-6">
                    <img src="https://images.unsplash.com/photo-1553062407-98eeb64c6a62?q=80&w=400&auto=format&fit=crop" alt="Large Bag" class="w-24 h-24 rounded-xl object-cover" />
                    <div class="flex-1">
                      <div class="flex justify-between">
                        <h3 class="font-bold text-xl">Large Bag</h3>
                        <span class="font-bold">$85</span>
                      </div>
                      <p class="text-sm text-gray-500">Fits 35–45 lb</p>
                    </div>
                  </div>
                </div>
              </div>

              <div class="absolute inset-0 flex items-center justify-center">
                <a
                  href="/pricing"
                  class="bg-gradient-to-r from-brand-primary to-brand-accent text-white px-8 py-4 rounded-xl font-bold shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105"
                >
                  Become a Member to Unlock Per-Bag Pricing
                </a>
              </div>
            </div>
          </div>
        )}

        <!-- Specialty -->
        <div>
          <h2 class="text-xl font-bold mb-4">Specialty Items</h2>
          <div class="space-y-4">
            <div class="bg-purple-50 rounded-xl border-2 border-purple-200 p-6">
              <div class="flex justify-between items-center">
                <div>
                  <h3 class="font-bold">Comforter</h3>
                  <p class="text-sm text-gray-500">$20 each</p>
                </div>
                <div class="flex items-center gap-2" data-addon="comforter">
                  <div class="addon-controls hidden">
                    <button type="button" class="addon-decrease px-3 py-1 border border-gray-300 rounded-lg hover:bg-gray-50">-</button>
                    <span class="addon-quantity px-3 font-semibold">0</span>
                    <button type="button" class="addon-increase px-3 py-1 border border-gray-300 rounded-lg hover:bg-gray-50">+</button>
                  </div>
                  <button type="button" class="addon-add px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700" data-addon="comforter" data-price="20">Add</button>
                </div>
              </div>
              <input type="hidden" name="addon_comforter" class="addon-input" value="0" />
            </div>

            <div class="bg-purple-50 rounded-xl border-2 border-purple-200 p-6">
              <div class="flex justify-between items-center">
                <div>
                  <h3 class="font-bold">Bedding Bundle</h3>
                  <p class="text-sm text-gray-500">$25 set</p>
                </div>
                <div class="flex items-center gap-2" data-addon="bedding_bundle">
                  <div class="addon-controls hidden">
                    <button type="button" class="addon-decrease px-3 py-1 border border-gray-300 rounded-lg hover:bg-gray-50">-</button>
                    <span class="addon-quantity px-3 font-semibold">0</span>
                    <button type="button" class="addon-increase px-3 py-1 border border-gray-300 rounded-lg hover:bg-gray-50">+</button>
                  </div>
                  <button type="button" class="addon-add px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700" data-addon="bedding_bundle" data-price="25">Add</button>
                </div>
              </div>
              <input type="hidden" name="addon_bedding_bundle" class="addon-input" value="0" />
            </div>

            <div class="bg-purple-50 rounded-xl border-2 border-purple-200 p-6">
              <div class="flex justify-between items-center">
                <div>
                  <h3 class="font-bold">Dry Cleaning</h3>
                  <p class="text-sm text-gray-500">$8 per item</p>
                </div>
                <div class="flex items-center gap-2" data-addon="dry_cleaning">
                  <div class="addon-controls hidden">
                    <button type="button" class="addon-decrease px-3 py-1 border border-gray-300 rounded-lg hover:bg-gray-50">-</button>
                    <span class="addon-quantity px-3 font-semibold">0</span>
                    <button type="button" class="addon-increase px-3 py-1 border border-gray-300 rounded-lg hover:bg-gray-50">+</button>
                  </div>
                  <button type="button" class="addon-add px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700" data-addon="dry_cleaning" data-price="8">Add</button>
                </div>
              </div>
              <input type="hidden" name="addon_dry_cleaning" class="addon-input" value="0" />
            </div>
          </div>
        </div>

        <!-- Estimate Preview -->
        <div class="bg-blue-50 border border-blue-200 rounded-xl p-6">
          <div class="flex items-center gap-3 mb-4">
            <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
              <svg
                class="w-5 h-5 text-blue-600"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width={2}
                  d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 002 2z"
                />
              </svg>
            </div>
            <h3 class="font-semibold text-gray-900">Estimated Total</h3>
          </div>

          <div class="space-y-2 text-sm" id="estimate-breakdown">
            <!-- Dynamic content will be inserted here -->
          </div>

          <div class="flex justify-between font-semibold border-t border-blue-200 pt-2 mt-2">
            <span>Total</span>
            <span id="total-estimate">$0.00</span>
          </div>

          <p class="text-xs text-gray-500 mt-3">
            Final pricing confirmed at pickup · $35 minimum applies
          </p>
        </div>

        <div class="flex flex-col sm:flex-row gap-3">
          <a
            href="/start-basic"
            class="bg-white text-gray-700 border-2 border-gray-300 px-6 py-4 rounded-xl font-medium hover:bg-gray-50 hover:border-gray-400 flex items-center justify-center gap-2"
          >
            <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M15 19l-7-7 7-7" />
            </svg>
            Back
          </a>
          <button type="submit" class="flex-1 bg-blue-600 text-white px-8 py-4 rounded-xl font-semibold hover:bg-blue-700">Continue</button>
        </div>
      </form>
    </div>
  </div>

  <script define:vars={{ isMember }}>
    document.addEventListener('DOMContentLoaded', function() {
      const memberRate = 1.75;
      const nonMemberRate = 2.25;
      const currentRate = isMember ? memberRate : nonMemberRate;

      // Order type selection
      const orderTypeRadios = document.querySelectorAll('.order-type-radio');
      const selectedOrderTypeInput = document.getElementById('selected-order-type');

      function updateOrderTypeSelection() {
        orderTypeRadios.forEach((radio) => {
          const label = radio.closest('label');
          const container = label?.querySelector('div');

          if (radio.checked) {
            container?.classList.add('border-blue-500', 'shadow-lg', 'ring-4', 'ring-blue-100');
            container?.classList.remove('border-gray-200', 'shadow-sm', 'border-green-200', 'border-green-500', 'ring-green-100');
            selectedOrderTypeInput.value = radio.value;
          } else {
            container?.classList.remove('border-blue-500', 'shadow-lg', 'ring-4', 'ring-blue-100', 'border-green-500', 'ring-green-100');

            if (radio.value.includes('bag')) {
              container?.classList.add('border-green-200', 'shadow-sm');
            } else {
              container?.classList.add('border-gray-200', 'shadow-sm');
            }
          }
        });
        updateEstimate();
      }

      orderTypeRadios.forEach(radio => {
        radio.addEventListener('change', updateOrderTypeSelection);
      });

      // Addon management
      const addonData = {
        comforter: { price: 20, quantity: 0 },
        bedding_bundle: { price: 25, quantity: 0 },
        dry_cleaning: { price: 8, quantity: 0 }
      };

      function updateAddonDisplay(addonId) {
        const container = document.querySelector(`[data-addon="${addonId}"]`)?.closest('.bg-purple-50');
        const addBtn = container?.querySelector('.addon-add');
        const controls = container?.querySelector('.addon-controls');
        const quantitySpan = container?.querySelector('.addon-quantity');
        const hiddenInput = container?.querySelector('.addon-input');

        const quantity = addonData[addonId].quantity;

        if (quantity > 0) {
          addBtn.classList.add('hidden');
          controls.classList.remove('hidden');
          quantitySpan.textContent = quantity.toString();
          hiddenInput.value = quantity.toString();
        } else {
          addBtn.classList.remove('hidden');
          controls.classList.add('hidden');
          hiddenInput.value = '0';
        }
      }

      function updateAddonQuantity(addonId, delta) {
        const newQty = Math.max(0, addonData[addonId].quantity + delta);
        addonData[addonId].quantity = newQty;
        updateAddonDisplay(addonId);
        updateEstimate();
      }

      // Setup addon controls
      document.querySelectorAll('.addon-add').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.preventDefault();
          const addonId = e.target.dataset.addon;
          updateAddonQuantity(addonId, 1);
        });
      });

      document.querySelectorAll('.addon-increase').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.preventDefault();
          const addonId = e.target.closest('[data-addon]')?.getAttribute('data-addon');
          updateAddonQuantity(addonId, 1);
        });
      });

      document.querySelectorAll('.addon-decrease').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.preventDefault();
          const addonId = e.target.closest('[data-addon]')?.getAttribute('data-addon');
          updateAddonQuantity(addonId, -1);
        });
      });

      // Initialize addon displays
      Object.keys(addonData).forEach(addonId => {
        addonData[addonId].quantity = 0;
        updateAddonDisplay(addonId);
      });

      // Estimate calculation
      function updateEstimate() {
        const breakdown = document.getElementById('estimate-breakdown');
        const totalElement = document.getElementById('total-estimate');

        let total = 0;
        breakdown.innerHTML = '';

        const selectedOrderType = document.querySelector('.order-type-radio:checked')?.value;

        if (selectedOrderType) {
          const div = document.createElement('div');
          div.className = 'flex justify-between';

          if (selectedOrderType === 'per_pound') {
            total += 20 * currentRate; // estimate 20 lb
            div.innerHTML = `<span>Per Pound (est. 20 lb)</span><span>$${(20 * currentRate).toFixed(2)}</span>`;
          } else {
            const prices = {
              small_bag: 35,
              medium_bag: 55,
              large_bag: 85
            };
            total += prices[selectedOrderType] || 0;
            const names = {
              small_bag: 'Small Bag',
              medium_bag: 'Medium Bag',
              large_bag: 'Large Bag'
            };
            div.innerHTML = `<span>${names[selectedOrderType]}</span><span>$${prices[selectedOrderType]}</span>`;
          }
          breakdown.appendChild(div);
        }

        // Add addons to breakdown
        Object.entries(addonData).forEach(([addonId, data]) => {
          if (data.quantity > 0) {
            const div = document.createElement('div');
            div.className = 'flex justify-between';
            const names = {
              comforter: 'Comforter',
              bedding_bundle: 'Bedding Bundle',
              dry_cleaning: 'Dry Cleaning'
            };
            const addonTotal = data.price * data.quantity;
            total += addonTotal;
            div.innerHTML = `<span>${names[addonId]} × ${data.quantity}</span><span>$${addonTotal.toFixed(2)}</span>`;
            breakdown.appendChild(div);
          }
        });

        totalElement.textContent = `$${total.toFixed(2)}`;
      }

      // Initialize
      updateOrderTypeSelection();
      updateEstimate();
    });
  </script>
</Layout>
