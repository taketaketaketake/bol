---
import Layout from '../layout/Layout.astro';
import ProgressSteps from '../components/ProgressSteps';
import StripeElements from '../components/StripeElements';
import { readWizard, clearWizard, writeWizard } from "../utils/wizard.server";
import { getSession } from "../utils/auth";
// Modern membership tier system imports
import { MEMBERSHIP_SUBSCRIPTION_PRICE, MembershipTier, getUserTier, getPerPoundRate, calculatePricing } from '../utils/pricing';

// Server-side handling
let w = {};

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const addMembership = formData.get("add-membership") === "on";

    // Payment processing will now be handled by Stripe Elements component
    // This form submission is now for non-JS fallback or other actions
    console.log('Form submitted - this should now be handled by Stripe Elements');

    // Redirect to prevent form resubmission
    return Astro.redirect('/checkout');
  } catch (error) {
    console.error("Error processing checkout:", error);
  }
}

w = await readWizard(Astro.request);

// Get user session for authenticated orders
const session = await getSession(Astro.cookies);
const authUserId = session?.user?.id || null;

// Require authentication to checkout
if (!session?.user?.id) {
  return Astro.redirect("/auth/login?redirect=/checkout");
}

// Redirect if prerequisites not met
if (!w.customer) {
  return Astro.redirect("/details");
}

// Helper function to format order type display
const formatOrderType = (orderType: string) => {
  switch(orderType) {
    case 'per_pound': return 'Per Pound';
    case 'small_bag': return 'Small Bag';
    case 'medium_bag': return 'Medium Bag';
    case 'large_bag': return 'Large Bag';
    case 'wash_fold': return 'Wash & Fold';
    case 'dry_cleaning': return 'Dry Cleaning';
    case 'combo': return 'Combo Service';
    case 'bedding_bundle': return 'Bedding Bundle';
    default: return orderType?.replace('_', ' ') || 'Service';
  }
};

// Calculate itemized total using modern pricing system
const calculateTotal = () => {
  let baseTotal = 3375; // Default $33.75 in cents

  // Use modern membership tier system
  const membershipTier = getUserTier(w.isMember || false);
  const currentRateDollars = getPerPoundRate(membershipTier);
  const currentRate = Math.round(currentRateDollars * 100); // Convert to cents

  // Base service pricing using centralized logic
  if (w.orderType === 'per_pound') {
    baseTotal = 20 * currentRate; // 20 lbs * current rate from centralized pricing
  } else if (w.orderType === 'small_bag') {
    baseTotal = 3500; // $35 (members only)
  } else if (w.orderType === 'medium_bag') {
    baseTotal = 5500; // $55 (members only)
  } else if (w.orderType === 'large_bag') {
    baseTotal = 8500; // $85 (members only)
  }

  // Calculate add-on fees
  const estimatedLbs = 20; // For per-pound orders
  const ecoFee = (w.addonPrefs?.eco && w.orderType === 'per_pound') ? estimatedLbs * 10 : 0; // $0.10/lb in cents
  const hangDryFee = (w.addonPrefs?.hangDry && w.orderType === 'per_pound') ? estimatedLbs * 25 : 0; // $0.25/lb in cents
  const rushFee = w.addonPrefs?.rush ? 1000 : 0; // $10 in cents

  // Calculate specialty items total
  let specialtyTotal = 0;
  if (w.addons) {
    if (w.addons.comforter) specialtyTotal += w.addons.comforter * 2000; // $20 each
    if (w.addons.bedding_bundle) specialtyTotal += w.addons.bedding_bundle * 2500; // $25 each
    if (w.addons.dry_cleaning) specialtyTotal += w.addons.dry_cleaning * 800; // $8 each
  }

  const grandTotal = baseTotal + ecoFee + hangDryFee + rushFee + specialtyTotal;

  return {
    baseTotal: (baseTotal / 100).toFixed(2),
    ecoFee: (ecoFee / 100).toFixed(2),
    hangDryFee: (hangDryFee / 100).toFixed(2),
    rushFee: (rushFee / 100).toFixed(2),
    specialtyTotal: (specialtyTotal / 100).toFixed(2),
    grandTotal: (grandTotal / 100).toFixed(2),
    grandTotalCents: grandTotal
  };
};

const totals = calculateTotal();

// SEO
const title = "Review & Confirm Order | Bags of Laundry";
const description = "Review your laundry service order and complete your booking.";
---

<Layout title={title} description={description} noIndex={true}>
  <div class="min-h-screen bg-gray-50">
    <div class="max-w-6xl mx-auto px-4 py-8">

      <!-- Progress Steps -->
      <ProgressSteps client:load currentStep={5} />

      <!-- Header -->
      <div class="text-center mb-8">
        <h1 class="text-2xl md:text-3xl font-bold text-gray-900 mb-2">
          Review & Confirm
        </h1>
        <p class="text-gray-600">
          Review your order details and complete your booking
        </p>
      </div>

      <div class="grid lg:grid-cols-5 gap-8">

        <!-- Main Content -->
        <div class="lg:col-span-3 space-y-6">

          <!-- Contact Information -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div class="flex items-center gap-3 mb-4">
              <div class="w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center">
                <svg class="w-6 h-6 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
              </div>
              <h2 class="text-xl font-semibold text-gray-900">Contact Information</h2>
              <a href="/details" class="ml-auto text-blue-600 hover:text-blue-700 text-sm font-medium">
                Edit
              </a>
            </div>
            <div class="grid md:grid-cols-2 gap-4 text-sm">
              <div>
                <span class="font-medium text-gray-900">Name:</span>
                <p class="text-gray-600 mt-1">{w.customer?.fullName}</p>
              </div>
              <div>
                <span class="font-medium text-gray-900">Email:</span>
                <p class="text-gray-600 mt-1">{w.customer?.email}</p>
              </div>
            </div>
          </div>


          <!-- Service Selection -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div class="flex items-center gap-3 mb-4">
              <div class="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center">
                <svg class="w-6 h-6 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4" />
                </svg>
              </div>
              <h2 class="text-xl font-semibold text-gray-900">Service</h2>
              <a href="/order-type" class="ml-auto text-blue-600 hover:text-blue-700 text-sm font-medium">
                Edit
              </a>
            </div>
            <div class="flex items-center justify-between">
              <div>
                <h3 class="font-medium text-gray-900">{formatOrderType(w.orderType)}</h3>
                <p class="text-sm text-gray-600">
                  {w.orderType === 'per_pound'
                    ? `$${getPerPoundRate(getUserTier(w.isMember || false)).toFixed(2)} per lb • 24-hour turnaround`
                    : '24-hour turnaround'}
                </p>
              </div>
              <div class="text-right">
                <span class="text-sm text-gray-500">Starting at</span>
                <p class="font-semibold text-gray-900">
                  {w.orderType === 'per_pound'
                    ? `$${getPerPoundRate(getUserTier(w.isMember || false)).toFixed(2)}/lb`
                    : w.orderType === 'small_bag' ? '$35'
                    : w.orderType === 'medium_bag' ? '$55'
                    : w.orderType === 'large_bag' ? '$85'
                    : 'TBD'}
                </p>
              </div>
            </div>

            <!-- Specialty Items -->
            <div class="mt-4 pt-4 border-t border-gray-200">
              <h4 class="font-medium text-gray-900 mb-2">Specialty Items</h4>
              <div class="space-y-1">
                {w.addons && (w.addons.comforter > 0 || w.addons.bedding_bundle > 0 || w.addons.dry_cleaning > 0) ? (
                  <>
                    {w.addons.comforter > 0 && (
                      <div class="flex justify-between text-sm">
                        <span>Comforter × {w.addons.comforter}</span>
                        <span>${(20 * w.addons.comforter).toFixed(2)}</span>
                      </div>
                    )}
                    {w.addons.bedding_bundle > 0 && (
                      <div class="flex justify-between text-sm">
                        <span>Bedding Bundle × {w.addons.bedding_bundle}</span>
                        <span>${(25 * w.addons.bedding_bundle).toFixed(2)}</span>
                      </div>
                    )}
                    {w.addons.dry_cleaning > 0 && (
                      <div class="flex justify-between text-sm">
                        <span>Dry Cleaning × {w.addons.dry_cleaning}</span>
                        <span>${(8 * w.addons.dry_cleaning).toFixed(2)}</span>
                      </div>
                    )}
                  </>
                ) : (
                  <p class="text-sm text-gray-500 italic">No specialty items selected</p>
                )}
              </div>
            </div>
          </div>

          <!-- Add-ons -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div class="flex items-center gap-3 mb-4">
              <div class="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
                <svg class="w-6 h-6 text-purple-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4" />
                </svg>
              </div>
              <h2 class="text-xl font-semibold text-gray-900">Add-ons</h2>
              <a href="/addons" class="ml-auto text-blue-600 hover:text-blue-700 text-sm font-medium">
                Edit
              </a>
            </div>

            {(w.addonPrefs?.eco || w.addonPrefs?.hangDry || w.addonPrefs?.rush) ? (
              <div class="space-y-3">
                {w.addonPrefs?.eco && (
                  <div class="flex justify-between items-center py-2 border-b border-gray-100">
                    <div class="flex items-center gap-3">
                      <div class="w-8 h-8 bg-green-50 rounded-full flex items-center justify-center">
                        <svg class="w-4 h-4 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.5 2.5L16 4.5 14.5 3 16 1.5 17.5 3 16 4.5 17.5 6M13 13h4-4V8H9v5h4 0z" />
                        </svg>
                      </div>
                      <span class="text-gray-900">Eco-friendly detergent</span>
                    </div>
                    <span class="text-gray-600">+$0.10/lb</span>
                  </div>
                )}

                {w.addonPrefs?.hangDry && (
                  <div class="flex justify-between items-center py-2 border-b border-gray-100">
                    <div class="flex items-center gap-3">
                      <div class="w-8 h-8 bg-blue-50 rounded-full flex items-center justify-center">
                        <svg class="w-4 h-4 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
                        </svg>
                      </div>
                      <span class="text-gray-900">Hang-dry delicates</span>
                    </div>
                    <span class="text-gray-600">+$0.25/lb</span>
                  </div>
                )}

                {w.addonPrefs?.rush && (
                  <div class="flex justify-between items-center py-2">
                    <div class="flex items-center gap-3">
                      <div class="w-8 h-8 bg-orange-50 rounded-full flex items-center justify-center">
                        <svg class="w-4 h-4 text-orange-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                        </svg>
                      </div>
                      <span class="text-gray-900">Same-day rush service</span>
                    </div>
                    <span class="text-gray-600">+$10</span>
                  </div>
                )}
              </div>
            ) : (
              <p class="text-gray-500 italic">No add-ons selected</p>
            )}
          </div>


          <!-- Special Instructions -->
          {w.addonPrefs?.notes && (
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <div class="flex items-center gap-3 mb-4">
                <div class="w-10 h-10 bg-yellow-100 rounded-full flex items-center justify-center">
                  <svg class="w-6 h-6 text-yellow-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                  </svg>
                </div>
                <h2 class="text-xl font-semibold text-gray-900">Special Instructions</h2>
                <a href="/addons" class="ml-auto text-blue-600 hover:text-blue-700 text-sm font-medium">
                  Edit
                </a>
              </div>
              <p class="text-gray-600 bg-gray-50 rounded-lg p-3">{w.addonPrefs.notes}</p>
            </div>
          )}

          <!-- Order Summary -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div class="flex items-center gap-3 mb-4">
              <div class="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center">
                <svg class="w-6 h-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 002 2z" />
                </svg>
              </div>
              <h2 class="text-xl font-semibold text-gray-900">Order Summary</h2>
            </div>

            <div class="space-y-3">
              <!-- Base Service -->
              <div class="flex justify-between items-center py-2">
                <span class="text-gray-900">{formatOrderType(w.orderType)}</span>
                <span class="font-medium text-gray-900">
                  {w.orderType === 'per_pound'
                    ? `$${(20 * getPerPoundRate(getUserTier(w.isMember || false))).toFixed(2)}`
                    : w.orderType === 'small_bag' ? '$35.00'
                    : w.orderType === 'medium_bag' ? '$55.00'
                    : w.orderType === 'large_bag' ? '$85.00'
                    : '$0.00'}
                </span>
              </div>

              <!-- Specialty Items -->
              {w.addons && (w.addons.comforter > 0 || w.addons.bedding_bundle > 0 || w.addons.dry_cleaning > 0) && (
                <>
                  {w.addons.comforter > 0 && (
                    <div class="flex justify-between items-center py-2">
                      <span class="text-gray-900">Comforter × {w.addons.comforter}</span>
                      <span class="font-medium text-gray-900">${(20 * w.addons.comforter).toFixed(2)}</span>
                    </div>
                  )}
                  {w.addons.bedding_bundle > 0 && (
                    <div class="flex justify-between items-center py-2">
                      <span class="text-gray-900">Bedding Bundle × {w.addons.bedding_bundle}</span>
                      <span class="font-medium text-gray-900">${(25 * w.addons.bedding_bundle).toFixed(2)}</span>
                    </div>
                  )}
                  {w.addons.dry_cleaning > 0 && (
                    <div class="flex justify-between items-center py-2">
                      <span class="text-gray-900">Dry Cleaning × {w.addons.dry_cleaning}</span>
                      <span class="font-medium text-gray-900">${(8 * w.addons.dry_cleaning).toFixed(2)}</span>
                    </div>
                  )}
                </>
              )}

              <!-- Add-on Services -->
              {w.addonPrefs?.rush && (
                <div class="flex justify-between items-center py-2">
                  <span class="text-gray-900">Same-day rush service</span>
                  <span class="font-medium text-gray-900">$10.00</span>
                </div>
              )}

              <!-- Pickup & Delivery -->
              <div class="flex justify-between items-center py-2">
                <span class="text-gray-900">Pickup & delivery</span>
                <span class="font-medium text-green-600">Free</span>
              </div>

              <!-- Total -->
              <div class="border-t border-gray-200 pt-3 mt-3">
                <div class="flex justify-between items-center">
                  <span class="text-lg font-semibold text-gray-900">Total</span>
                  <span class="text-lg font-bold text-gray-900">${totals.grandTotal}</span>
                </div>
              </div>

              <!-- Disclaimer -->
              <p class="text-xs text-gray-500 mt-3 italic">
                Final amount will be based on actual weight
              </p>
            </div>
          </div>
        </div>

        <!-- Payment Sidebar -->
        <div class="lg:col-span-2">
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 sticky top-8">


            <!-- Payment Method -->
            <div class="mb-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-4">Payment Method</h3>

              <!-- Stripe Elements -->
              <!-- AFTER (removed onPaymentSuccess): -->
              <StripeElements
                client:load
                amount={totals.grandTotalCents}
                addMembership={false}
                orderDetails={{
                  orderType: w.orderType,
                  planType: w.orderType,
                  customerName: w.customer?.fullName || '',
                  customerEmail: w.customer?.email || '',
                  customerPhone: w.phone || '',
                  pickupAddress: {
                    line1: w.address?.line1 || '',
                    postal: w.address?.postal || ''
                  },
                  deliveryAddress: w.dropoffAddress ? {
                    line1: w.dropoffAddress.line1 || '',
                    date: w.dropoffAddress.date || ''
                  } : null,
                  pickupDate: w.date || '',
                  pickupTimeWindowId: w.timeWindow || '',
                  notes: w.addonPrefs?.notes || '',
                  preferences: w.addonPrefs || {},
                  addons: w.addons || [],
                  addonPrefs: w.addonPrefs || {},
                  serviceType: 'wash_fold',
                  estimatedAmount: totals.grandTotalCents,
                  authUserId: authUserId
                }}
                onPaymentError={(error) => {
                  console.error('Payment error:', error);
                  alert('Payment failed: ' + error);
                }}
              />
            </div>

            <!-- Membership Upsell (Non-Members Only) -->
            {getUserTier(w.isMember || false) === MembershipTier.NON_MEMBER && (
              <div class="mb-6" id="membership-upsell">
                <div class="bg-gradient-to-r from-blue-50 to-purple-50 border-2 border-blue-200 rounded-xl p-6">
                  <div class="flex items-start gap-4">
                    <div class="flex-shrink-0">
                      <div class="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
                        <svg class="w-6 h-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.5 2.5L16 4.5 14.5 3 16 1.5 17.5 3 16 4.5 17.5 6M13 13h4-4V8H9v5h4 0z" />
                        </svg>
                      </div>
                    </div>

                    <div class="flex-1">
                      <div class="flex items-center gap-2 mb-2">
                        <h3 class="font-semibold text-gray-900">🎉 Special Offer: Join Our Membership</h3>
                        <span class="bg-green-500 text-white px-2 py-1 rounded-full text-xs font-semibold">Save $0.50/lb</span>
                      </div>

                      <p class="text-sm text-gray-600 mb-4">
                        Add 6-month membership for just ${MEMBERSHIP_SUBSCRIPTION_PRICE.toFixed(2)} and save on every order. Get member pricing of $1.75/lb instead of $2.25/lb, plus unlock per-bag pricing options.
                      </p>

                      <div class="bg-white rounded-lg p-4 mb-4 border border-blue-200">
                        <div class="flex justify-between items-center mb-2">
                          <span class="text-sm text-gray-600">6-Month Membership</span>
                          <span class="font-semibold text-gray-900">${MEMBERSHIP_SUBSCRIPTION_PRICE.toFixed(2)}</span>
                        </div>
                        <div class="flex justify-between items-center text-sm">
                          <span class="text-green-600">Savings on this order:</span>
                          <span class="font-semibold text-green-600" id="membership-savings">$10.00</span>
                        </div>
                        <div class="flex justify-between items-center text-xs text-gray-500 mt-1">
                          <span>Your new order total:</span>
                          <span id="new-total-with-membership">$84.99</span>
                        </div>
                      </div>

                      <div class="flex items-center gap-3">
                        <label class="flex items-center cursor-pointer">
                          <input
                            type="checkbox"
                            id="add-membership"
                            class="sr-only"
                          />
                          <div class="relative">
                            <div class="w-6 h-6 bg-white border-2 border-gray-300 rounded-md transition-all duration-200 checkbox-box"></div>
                            <svg class="w-4 h-4 text-white absolute top-1 left-1 hidden checkbox-check" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                            </svg>
                          </div>
                          <span class="ml-3 text-sm font-medium text-gray-900">
                            Yes, add membership and start saving immediately!
                          </span>
                        </label>
                      </div>

                      <div class="mt-3 text-xs text-gray-500">
                        ✓ $0.50 savings per pound  ✓ Per-bag pricing options  ✓ Priority booking  ✓ Exclusive promotions
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}

            <!-- Member Status Badge (Members Only) -->
            {getUserTier(w.isMember || false) === MembershipTier.MEMBER && (
              <div class="mb-6">
                <div class="bg-gradient-to-r from-green-50 to-blue-50 border-2 border-green-200 rounded-xl p-6">
                  <div class="flex items-center gap-3">
                    <div class="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
                      <svg class="w-6 h-6 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                    </div>
                    <div class="flex-1">
                      <h3 class="font-semibold text-gray-900">✨ Member Pricing Active</h3>
                      <p class="text-sm text-gray-600 mt-1">You're saving $0.50/lb with your membership!</p>
                    </div>
                  </div>
                </div>
              </div>
            )}

            <!-- Navigation Buttons -->
            <div class="space-y-3">
              <input type="hidden" name="add-membership" id="membership-hidden-input" value="off" />

              <a
                href="/details"
                class="w-full bg-white text-gray-700 border-2 border-gray-300 px-6 py-3 rounded-xl font-medium hover:bg-gray-50 hover:border-gray-400 transition-all duration-200 flex items-center justify-center gap-2"
              >
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M15 19l-7-7 7-7" />
                </svg>
                Back to Details
              </a>
            </div>

            <!-- Trust Signals -->
            <div class="mt-6 pt-6 border-t border-gray-200 space-y-2">
              <div class="flex items-center gap-2 text-sm text-gray-600">
                <svg class="w-4 h-4 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
                Secure payment processing
              </div>
              <div class="flex items-center gap-2 text-sm text-gray-600">
                <svg class="w-4 h-4 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
                30-minute pickup window notification
              </div>
              <div class="flex items-center gap-2 text-sm text-gray-600">
                <svg class="w-4 h-4 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
                100% satisfaction guarantee
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script define:vars={{ orderType: w.orderType, hasEco: w.addonPrefs?.eco, hasHangDry: w.addonPrefs?.hangDry }}>
    document.addEventListener('DOMContentLoaded', function() {
      const addMembershipCheckbox = document.getElementById('add-membership');
      const membershipHiddenInput = document.getElementById('membership-hidden-input');
      const checkboxBox = document.querySelector('.checkbox-box');
      const checkboxCheck = document.querySelector('.checkbox-check');
      const membershipSavings = document.getElementById('membership-savings');
      const newTotalWithMembership = document.getElementById('new-total-with-membership');

      // Get current order total from the displayed value
      const totalElement = document.querySelector('.text-2xl.font-bold.text-gray-900');
      const currentTotal = parseFloat(totalElement?.textContent?.replace('$', '') || '0');
      const membershipFee = parseFloat('${MEMBERSHIP_SUBSCRIPTION_PRICE}');

      // Calculate actual savings based on current order
      function calculateSavings() {
        let savings = 0;

        // Per-pound orders save $0.50/lb on base rate
        if (orderType === 'per_pound') {
          const estimatedLbs = 20; // Standard estimate
          const perLbSavings = 0.50;
          savings = estimatedLbs * perLbSavings; // 20 lbs * $0.50 = $10

          // Add-on fees also save when they're per-pound
          if (hasEco) {
            savings += estimatedLbs * 0.10; // $0.10/lb eco fee savings
          }
          if (hasHangDry) {
            savings += estimatedLbs * 0.25; // $0.25/lb hang dry fee savings
          }
        }
        // Per-bag orders are members-only, but show comparable savings
        else if (orderType === 'small_bag' || orderType === 'medium_bag' || orderType === 'large_bag') {
          savings = 8.00; // Conservative estimate based on typical per-bag weight
        }

        return savings;
      }

      const savings = calculateSavings();
      const newTotal = currentTotal + membershipFee - savings;

      // Update display (only if elements exist - they won't exist for members)
      if (membershipSavings) {
        membershipSavings.textContent = `$${savings.toFixed(2)}`;
      }
      if (newTotalWithMembership) {
        newTotalWithMembership.textContent = `$${newTotal.toFixed(2)}`;
      }

      // Store reference to Stripe Elements component for updates
      let stripeElementsComponent = null;

      // Wait for Stripe Elements to initialize
      setTimeout(() => {
        stripeElementsComponent = document.querySelector('[data-stripe-elements]');
      }, 1000);

      // Checkbox functionality (only if checkbox exists - won't exist for members)
      addMembershipCheckbox?.addEventListener('change', function() {
        const isChecked = this.checked;

        if (isChecked) {
          checkboxBox?.classList.remove('border-gray-300', 'bg-white');
          checkboxBox?.classList.add('border-blue-500', 'bg-blue-500');
          checkboxCheck?.classList.remove('hidden');
          membershipHiddenInput.value = 'on';
        } else {
          checkboxBox?.classList.add('border-gray-300', 'bg-white');
          checkboxBox?.classList.remove('border-blue-500', 'bg-blue-500');
          checkboxCheck?.classList.add('hidden');
          membershipHiddenInput.value = 'off';
        }

        // Trigger a custom event that the Stripe component can listen to
        window.dispatchEvent(new CustomEvent('membershipToggled', {
          detail: {
            addMembership: isChecked,
            newAmount: Math.round((isChecked ? newTotal : currentTotal) * 100) // Convert to cents
          }
        }));
      });

      // Make the label clickable
      const membershipLabel = document.querySelector('label[for="add-membership"]');
      membershipLabel?.addEventListener('click', function(e) {
        e.preventDefault();
        addMembershipCheckbox.checked = !addMembershipCheckbox.checked;
        addMembershipCheckbox.dispatchEvent(new Event('change'));
      });
    });
  </script>
</Layout>