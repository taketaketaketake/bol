---
import Layout from '../../layout/Layout.astro';
import { createClient } from '@supabase/supabase-js';
import { isTokenValid } from '../../utils/guest-auth';

const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

const { id } = Astro.params;
const token = Astro.url.searchParams.get('token');

// Validate required parameters
if (!id || !token) {
  console.error('[orders/id] Missing parameters:', { id, token });
  return Astro.redirect('/404');
}

console.log('[orders/id] Looking up order:', { id, token });

// Fetch order with token validation
const { data: order, error } = await supabase
  .from('orders')
  .select(`
    *,
    customers (
      full_name,
      email,
      phone
    ),
    addresses (
      label,
      line1,
      line2,
      city,
      state,
      postal_code
    )
  `)
  .eq('id', id)
  .eq('access_token', token)
  .single();

console.log('[orders/id] Query result:', { order: !!order, error });

// Check if order exists and token is valid
if (!order || error) {
  console.error('[orders/id] Order not found or invalid token:', error);
  console.error('[orders/id] Searched for order ID:', id);
  console.error('[orders/id] With token:', token);
  return Astro.redirect('/404');
}

// Check if token has expired
if (!isTokenValid(order.token_expires_at)) {
  console.error('Token has expired for order:', id);
  return Astro.redirect('/404');
}

// Format order data for display
const customer = order.customers;
const address = order.addresses;

const formatOrderType = (type: string) => {
  switch(type) {
    case 'per_pound': return 'Per Pound';
    case 'per_lb': return 'Per Pound';
    case 'small_bag': return 'Small Bag';
    case 'bag_small': return 'Small Bag';
    case 'medium_bag': return 'Medium Bag';
    case 'bag_medium': return 'Medium Bag';
    case 'large_bag': return 'Large Bag';
    case 'bag_large': return 'Large Bag';
    default: return type?.replace('_', ' ') || 'Service';
  }
};

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('en-US', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

const getStatusColor = (status: string) => {
  switch(status) {
    case 'scheduled': return 'bg-blue-100 text-blue-800';
    case 'picked_up': return 'bg-yellow-100 text-yellow-800';
    case 'in_progress': return 'bg-purple-100 text-purple-800';
    case 'ready_for_delivery': return 'bg-green-100 text-green-800';
    case 'delivered': return 'bg-gray-100 text-gray-800';
    case 'cancelled': return 'bg-red-100 text-red-800';
    default: return 'bg-gray-100 text-gray-800';
  }
};

const getPaymentStatusColor = (status: string) => {
  switch(status) {
    case 'paid': return 'bg-green-100 text-green-800';
    case 'requires_payment': return 'bg-yellow-100 text-yellow-800';
    case 'failed': return 'bg-red-100 text-red-800';
    default: return 'bg-gray-100 text-gray-800';
  }
};

const title = `Order #${order.id.slice(0, 8)} | Bags of Laundry`;
const description = `View your laundry order details and track status.`;
---

<Layout title={title} description={description} noIndex={true}>
  <div class="min-h-screen bg-gray-50">
    <div class="max-w-4xl mx-auto px-4 py-8">

      <!-- Header -->
      <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6">
        <div class="flex items-center justify-between">
          <div>
            <h1 class="text-2xl font-bold text-gray-900">Order #{order.id.slice(0, 8)}</h1>
            <p class="text-gray-600 mt-1">Placed on {formatDate(order.created_at)}</p>
          </div>
          <div class="flex gap-3">
            <span class={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(order.status)}`}>
              {order.status.replace('_', ' ').toUpperCase()}
            </span>
            <span class={`px-3 py-1 rounded-full text-sm font-medium ${getPaymentStatusColor(order.payment_status)}`}>
              {order.payment_status.replace('_', ' ').toUpperCase()}
            </span>
          </div>
        </div>
      </div>

      <div class="grid lg:grid-cols-3 gap-6">

        <!-- Order Details -->
        <div class="lg:col-span-2 space-y-6">

          <!-- Service Details -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <h2 class="text-xl font-semibold text-gray-900 mb-4">Service Details</h2>

            <div class="space-y-4">
              <div>
                <span class="text-sm font-medium text-gray-500">Service Type</span>
                <p class="text-gray-900">{formatOrderType(order.pricing_model || order.service_type)}</p>
              </div>

              <div>
                <span class="text-sm font-medium text-gray-500">Pickup Date</span>
                <p class="text-gray-900">{formatDate(order.pickup_date)}</p>
              </div>

              {order.delivery_date && (
                <div>
                  <span class="text-sm font-medium text-gray-500">Delivery Date</span>
                  <p class="text-gray-900">{formatDate(order.delivery_date)}</p>
                </div>
              )}

              {order.measured_weight_lb && (
                <div>
                  <span class="text-sm font-medium text-gray-500">Measured Weight</span>
                  <p class="text-gray-900">{order.measured_weight_lb} lbs</p>
                </div>
              )}

              {order.notes && (
                <div>
                  <span class="text-sm font-medium text-gray-500">Special Instructions</span>
                  <p class="text-gray-900 bg-gray-50 rounded-lg p-3">{order.notes}</p>
                </div>
              )}
            </div>
          </div>

          <!-- Address Information -->
          {address && (
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h2 class="text-xl font-semibold text-gray-900 mb-4">Pickup Address</h2>

              <div class="text-gray-900">
                <p>{address.line1}</p>
                {address.line2 && <p>{address.line2}</p>}
                <p>{address.city}, {address.state} {address.postal_code}</p>
              </div>
            </div>
          )}

          <!-- Order Preferences -->
          {order.preferences && Object.keys(order.preferences).length > 0 && (
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h2 class="text-xl font-semibold text-gray-900 mb-4">Preferences</h2>

              <div class="space-y-2">
                {order.preferences.eco && (
                  <div class="flex items-center gap-2">
                    <div class="w-2 h-2 bg-green-500 rounded-full"></div>
                    <span class="text-gray-900">Eco-friendly detergent</span>
                  </div>
                )}
                {order.preferences.hangDry && (
                  <div class="flex items-center gap-2">
                    <div class="w-2 h-2 bg-blue-500 rounded-full"></div>
                    <span class="text-gray-900">Hang-dry delicates</span>
                  </div>
                )}
                {order.preferences.rush && (
                  <div class="flex items-center gap-2">
                    <div class="w-2 h-2 bg-orange-500 rounded-full"></div>
                    <span class="text-gray-900">Same-day rush service</span>
                  </div>
                )}
              </div>
            </div>
          )}
        </div>

        <!-- Sidebar -->
        <div class="space-y-6">

          <!-- Customer Information -->
          {customer && (
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-4">Customer Info</h3>

              <div class="space-y-3 text-sm">
                <div>
                  <span class="font-medium text-gray-500">Name</span>
                  <p class="text-gray-900">{customer.full_name}</p>
                </div>
                <div>
                  <span class="font-medium text-gray-500">Email</span>
                  <p class="text-gray-900">{customer.email}</p>
                </div>
                {customer.phone && (
                  <div>
                    <span class="font-medium text-gray-500">Phone</span>
                    <p class="text-gray-900">{customer.phone}</p>
                  </div>
                )}
              </div>
            </div>
          )}

          <!-- Order Summary -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Order Summary</h3>

            <div class="space-y-3">
              <div class="flex justify-between text-sm">
                <span class="text-gray-600">Subtotal</span>
                <span class="text-gray-900">${(order.subtotal_cents / 100).toFixed(2)}</span>
              </div>

              {order.rush_fee_cents > 0 && (
                <div class="flex justify-between text-sm">
                  <span class="text-gray-600">Rush Fee</span>
                  <span class="text-gray-900">${(order.rush_fee_cents / 100).toFixed(2)}</span>
                </div>
              )}

              {order.discounts_cents > 0 && (
                <div class="flex justify-between text-sm">
                  <span class="text-gray-600">Discounts</span>
                  <span class="text-green-600">-${(order.discounts_cents / 100).toFixed(2)}</span>
                </div>
              )}

              <div class="flex justify-between text-sm border-t pt-3">
                <span class="font-semibold text-gray-900">Total</span>
                <span class="font-semibold text-gray-900">${(order.total_cents / 100).toFixed(2)}</span>
              </div>
            </div>
          </div>

          <!-- Actions -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Need Help?</h3>

            <div class="space-y-3">
              <a
                href={`mailto:support@bagsoflaundry.com?subject=Order%20${order.id}`}
                class="w-full bg-blue-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-blue-700 transition-colors flex items-center justify-center gap-2"
              >
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
                Contact Support
              </a>

              <a
                href="tel:+15551234567"
                class="w-full bg-white text-gray-700 border border-gray-300 px-4 py-2 rounded-lg font-medium hover:bg-gray-50 transition-colors flex items-center justify-center gap-2"
              >
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                </svg>
                Call Us
              </a>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</Layout>